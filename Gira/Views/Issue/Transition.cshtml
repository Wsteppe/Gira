@model Gira.Models.Issues.IssueTransitionViewModel

@{
    ViewBag.Title = "Transition";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Transition - @Model.Transition</h2>
<hr />

<h3>Issue Details</h3>

<dl class="dl-horizontal">
    <dt>
        Creator
    </dt>
    <dd>
        @Html.DisplayFor(model => model.Issue.Creator.UserName)
    </dd>
    <dt>
        Responsible user
    </dt>
    <dd>
        @Html.DisplayFor(model => model.Issue.ResponsibleUser.UserName)
    </dd>
    <dt>
        @Html.DisplayNameFor(model => model.Issue.Subject)
    </dt>
    <dd>
        @Html.DisplayFor(model => model.Issue.Subject)
    </dd>
    <dt>
        @Html.DisplayNameFor(model => model.Issue.Description)
    </dt>
    <dd>
        @Html.DisplayFor(model => model.Issue.Description)
    </dd>
    <dt>
        @Html.DisplayNameFor(model => model.Issue.PriorityCode)
    </dt>
    <dd>
        @Html.DisplayFor(model => model.Issue.PriorityCode)
    </dd>
    <dt>
        @Html.DisplayNameFor(model => model.Issue.IssueStatusCode)
    </dt>
    <dd>
        @Html.DisplayFor(model => model.Issue.IssueStatusCode)
    </dd>
    <dt>
        @Html.DisplayNameFor(model => model.Issue.Occurrence)
    </dt>
    <dd>
        @Html.DisplayFor(model => model.Issue.Occurrence)
    </dd>
    <dt>
        @Html.DisplayNameFor(model => model.Issue.Registered)
    </dt>
    <dd>
        @Html.DisplayFor(model => model.Issue.Registered)
    </dd>
</dl>

@using (Html.BeginForm("Transition", "Issue", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    @Html.HiddenFor(model => model.Issue.Id)
    @Html.HiddenFor(model => model.Transition)
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.Comment, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Comment, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Comment, "", new { @class = "text-danger" })
            </div>
        </div>

        @if (Model.Solvers != null && Model.Solvers.Any())
        {
            <div class="form-group">
                @Html.LabelFor(model => model.SolverId, "Solver", new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.SolverId, Model.Solvers, null, new { @class = "form-control", required = "required" })
                    @Html.ValidationMessageFor(model => model.SolverId, "", new { @class = "text-danger" })
                </div>
            </div>
        }

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="@Model.Transition" class="btn btn-default" />
            </div>
        </div>
    </div>
}
